// Code generated by MockGen. DO NOT EDIT.
// Source: internal/message/message/delivery/message_handler.go
//
// Generated by this command:
//
//	mockgen --source=internal/message/message/delivery/message_handler.go --destination=internal/message/message/mocks/usecases.go --package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/Vilinvil/task_messaggio/pkg/models"
	uuid "github.com/google/uuid"
	gomock "go.uber.org/mock/gomock"
)

// MockMessageService is a mock of MessageService interface.
type MockMessageService struct {
	ctrl     *gomock.Controller
	recorder *MockMessageServiceMockRecorder
}

// MockMessageServiceMockRecorder is the mock recorder for MockMessageService.
type MockMessageServiceMockRecorder struct {
	mock *MockMessageService
}

// NewMockMessageService creates a new mock instance.
func NewMockMessageService(ctrl *gomock.Controller) *MockMessageService {
	mock := &MockMessageService{ctrl: ctrl}
	mock.recorder = &MockMessageServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMessageService) EXPECT() *MockMessageServiceMockRecorder {
	return m.recorder
}

// AddMessage mocks base method.
func (m *MockMessageService) AddMessage(ctx context.Context, value string) (uuid.UUID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddMessage", ctx, value)
	ret0, _ := ret[0].(uuid.UUID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddMessage indicates an expected call of AddMessage.
func (mr *MockMessageServiceMockRecorder) AddMessage(ctx, value any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddMessage", reflect.TypeOf((*MockMessageService)(nil).AddMessage), ctx, value)
}

// GetMessageStatistic mocks base method.
func (m *MockMessageService) GetMessageStatistic(ctx context.Context) (*models.MessageStatistic, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMessageStatistic", ctx)
	ret0, _ := ret[0].(*models.MessageStatistic)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMessageStatistic indicates an expected call of GetMessageStatistic.
func (mr *MockMessageServiceMockRecorder) GetMessageStatistic(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMessageStatistic", reflect.TypeOf((*MockMessageService)(nil).GetMessageStatistic), ctx)
}
